#~# QMUL CentOS 6 Custom Application LAMP container with Puppet
#
# Log:
# 2015-11-20 martin: v1.0 Created

C_HOSTNAME=centos6_app_lamp_mdte2
C_IMAGE=qmul/centos6_app_lamp_puppet:v1.0
VER="v1.0"
CNAME=C_HOSTNAME

#~# Stop old container
if [[ $(docker ps -f name="${CNAME}" --format "{{.ID}}") ]] ; 
    then 
        echo -e "\n*** Stopping old ${CNAME} ***\n"
        docker stop $(docker ps -f name="${CNAME}" --format "{{.ID}}") ; 
    else 
        echo "No container to stop" ; 
fi

#~# Remove old container 
#~# TODO : Need to ask user if they really mean this
if [[ $(docker ps -a -f name="${CNAME}" --format "{{.ID}}") ]] ; 
    then 
        echo -e "\n*** Removing old ${CNAME} ***\n"
        docker rm $(docker ps -a -f name="${CNAME}" --format "{{.ID}}") ; 
    else 
        echo "No container to remove" ; 
fi

#~# TODO Hardcoded ports to 3308 2201 8001
R_PORT__MYSQL=3308
R_PORT_SSH=2201
R_PORT_HTTP=8001

#~# Create container from qmul/centos6_app_lamp_puppet:v1.0 image with name centos6_app_lamp_mdte2
echo Runing up up the initial container
docker run -d -p $R_PORT_HTTP:80 -p $R_PORT_SSH:22 -p $R_PORT_MYSQL:3306 -h $C_HOSTNAME --name $C_HOSTNAME $C_IMAGE

#~# Run the postinstall configuration (join to puppet and update)

cat <<EOF

Please add the following line to the QM Puppet main manifest in the Containers section.

node $C_HOSTNAME inherits containernode { }

Press N and ask Martin if you dont know what this means.

Enter Y when done any other char to exit.
EOF

read input
if [ "$input" != "Y" ];
then
   echo Removing running container as you have bailed out.
   docker rm -f centos6_app_lamp_mdte2
   echo Exiting.
   exit 1
fi

#~# Add the puppet server to the hosts file 
# This must be done here not at Dockerfile level as docker overwrites it
docker exec -i $C_HOSTNAME sh -c 'echo 10.16.240.104 puppet puppet.localdomain >>/etc/hosts'

#~# Run the puppet agent to setup our users
docker exec -i $C_HOSTNAME puppet agent -t


